
<%- include('includes/head');%>    
  <section">  
    <%- include('includes/nav') %>                
    <h3 class = "text-left"style="padding: 20px 0px 0px 20px;">Adicionar contato</h3>
    <span class = "text-left" style="padding: 0px 0p 0px 20px;"><h5 style="color: #707477; margin: 14px;">Registre ou edite os dados do contato a ser adicionado</h5></span>        
    <%- include('includes/messages')%>          
          <% if (contato._id) {%>
          <form autocomplete = "off" method = "POST" margin: auto;" class="form-group" action="/adicionar-contato/edit/<%= contato._id%>">
          <%} else{%>
          <form autocomplete = "off" method = "POST" margin: auto;" class="form-group" action="/adicionar-contato">
          <%}%>
            <input type="hidden" name="_csrf" value="<%=csrf%>">
              <div class="form-group">
                <label class="control-label col-sm-2" for="nome">Nome:</label>
                <div class="col-sm-10">
                  <input value = "<%= contato.nome%>" type="text" class="form-control " name="nome" placeholder="Enter name">
                </div>
              </div>
              <div class="form-group">
                <label class="control-label col-sm-2" for="email">Email:</label>
                <div class="col-sm-10">
                  <input value = "<%=contato.email%>"="email" class="form-control " name="email" placeholder="Enter email">
                </div>
              </div>
              <div class="form-group">
                <label class="control-label col-sm-2" for="telefone">Telefone:</label>
                <div class="col-sm-10">
                  <input value = "<%=contato.telefone%>"type="tel" class="form-control " name="telefone" placeholder="Enter cellphone">
                </div>
              </div>
            <div class="form-group">
              <div style = "padding: 0px 0px 0px 0px;"class = "autocomplete">
                <label style = "margin: 0px 16px; padding: 0px 0px 5px 0px ;"for="estado">Estado:</label><br>
                <input placeholder = "Enter state" style = "border: 1px solid #b7bbb5;padding: 0px 0px 0px 10px; margin: 0px 16px; height: 32px; border-radius: 2px;" value = "<%=contato.estado%>" type="text" id = "myInput" style = "padding: 0px 0px 0px 10px; margin: 0 16px; border: 1px solid #b7bbbe;border-radius: 2px;"  name = "estado">
              </div>
            </div>
            <div class="form-group">
              <div class="col-sm-offset-2 col-sm-10">
                <button type="submit" class="btn btn-default border-bottom" style="color: white; background-color: #343a40;">Submit</button>
              </div>
            </div>   
              </form>
            </div>
  </section>
  <script>
    var countries = ['Minas Gerais','Bahia','Santa Catarina','Paraná','Goiás','Ceará','Pernambuco','São Paulo','Amazonas','Rio Grande do Sul','Paraíba','Maranhão', 'Pará', 'Espírito Santo', 'Mato Grosso', 'Sergipe', 'Rio Grande do Norte', 'Mato Grosso do Sul', 'Rondônia', 'Alagoas', 'Acre', 'Tocantins', 'Rio de Janeiro', 'Roraima', 'Amapá'];

    function autocomplete(inp, arr) {
  /*the autocomplete function takes two arguments,
  the text field element and an array of possible autocompleted values:*/
  var currentFocus;
  /*execute a function when someone writes in the text field:*/
  inp.addEventListener("input", function(e) {
      var a, b, i, val = this.value;
      /*close any already open lists of autocompleted values*/
      closeAllLists();
      if (!val) { return false;}
      currentFocus = -1;
      /*create a DIV element that will contain the items (values):*/
      a = document.createElement("DIV");
      a.setAttribute("id", this.id + "autocomplete-list");
      a.setAttribute("class", "autocomplete-items");
      /*append the DIV element as a child of the autocomplete container:*/
      this.parentNode.appendChild(a);
      /*for each item in the array...*/
      for (i = 0; i < arr.length; i++) {
        /*check if the item starts with the same letters as the text field value:*/
        if (arr[i].substr(0, val.length).toUpperCase() == val.toUpperCase()) {
          /*create a DIV element for each matching element:*/
          b = document.createElement("DIV");
          /*make the matching letters bold:*/
          b.innerHTML = "<strong>" + arr[i].substr(0, val.length) + "</strong>";
          b.innerHTML += arr[i].substr(val.length);
          /*insert a input field that will hold the current array item's value:*/
          b.innerHTML += "<input type='hidden' value='" + arr[i] + "'>";
          /*execute a function when someone clicks on the item value (DIV element):*/
              b.addEventListener("click", function(e) {
              /*insert the value for the autocomplete text field:*/
              inp.value = this.getElementsByTagName("input")[0].value;
              /*close the list of autocompleted values,
              (or any other open lists of autocompleted values:*/
              closeAllLists();
          });
          a.appendChild(b);
        }
      }
  });
  /*execute a function presses a key on the keyboard:*/
  inp.addEventListener("keydown", function(e) {
      var x = document.getElementById(this.id + "autocomplete-list");
      if (x) x = x.getElementsByTagName("div");
      if (e.keyCode == 40) {
        currentFocus++;
        addActive(x);
      } else if (e.keyCode == 38) { //up 
        currentFocus--; 
        addActive(x);
      } else if (e.keyCode == 13) {    
        e.preventDefault();
        if (currentFocus > -1) {
          if (x) x[currentFocus].click();
        }
      }
  });
  function addActive(x) {    
    if (!x) return false;
    removeActive(x);
    if (currentFocus >= x.length) currentFocus = 0;
    if (currentFocus < 0) currentFocus = (x.length - 1);
    /*add class "autocomplete-active":*/
    x[currentFocus].classList.add("autocomplete-active");
  }

  function removeActive(x) {
    /*a function to remove the "active" class from all autocomplete items:*/
    for (var i = 0; i < x.length; i++) {
      x[i].classList.remove("autocomplete-active");
    }
  }

  function closeAllLists(elmnt) {
    var x = document.getElementsByClassName("autocomplete-items");
    for (var i = 0; i < x.length; i++) {
      if (elmnt != x[i] && elmnt != inp) {
      x[i].parentNode.removeChild(x[i]);
    }
  }
}

document.addEventListener("click", function (e) {
    closeAllLists(e.target);
});
}

  autocomplete(document.getElementById("myInput"), countries)
  
  </script>
    
<%- include('includes/footer');%>